# File roms/09-wait-click.s
0000			;-- Ejemplo 9: Deteccion de un "click" en el pulsador 
0000			;-- Cada vez que hay un click se incrementa un contador 
0000			;-- que se muestra en los leds 
0000			 
0000			;---- PUERTOS 
0000			LEDS:  equ 0x40 
0000			BUTTON: equ 0x00 
0000			 
0000			 
0000			;--- Comienzo del programa 
0000			org 0x0000 
0000			main: 
0000			  ;-- Configurar la pila 
0000 31 ff 3f		  ld sp, topOfStack 
0003			 
0003			  ;-- Inicializar contador de clicks 
0003 16 00		  ld D, 0 
0005			 
0005			  ;-- Bucle principal 
0005			main_loop: 
0005			  ;-- Mostrar el contador de clicks actual por los LEDs 
0005 7a			  ld A, D 
0006 d3 40		  out (LEDS), A 
0008			 
0008			  ;-- Esperar a que llegue un click 
0008 cd 0e 00		  call wait_click 
000b			 
000b			  ;-- Incrementar contador 
000b 14			  inc D 
000c			 
000c			  ;-- Repetir 
000c 18 f7		  jr main_loop 
000e			 
000e			 
000e			wait_click: 
000e			 
000e			  ;-- Inicializar. Leer el estado actual del pulsador 
000e db 00		  in A, (BUTTON) 
0010 4f			  ld C, A 
0011			 
0011			 
0011			loop: 
0011			  ;-- Guardar en B el valor actual 
0011 41			  ld B, C 
0012			 
0012			  ;-- Leer pulsador (valor actual) 
0012 db 00		  in A, (BUTTON) 
0014 4f			  ld C, A ;-- Guardar el valor actual en C 
0015			 
0015			  ;-- Comprobar si esta pulsado 
0015 e6 01		  and 0x01 
0017			 
0017 20 02		  jr nz, pulsado 
0019			 
0019			  ;-- No pulsado: repetir 
0019 18 f6		  jr loop 
001b			 
001b			pulsado: 
001b			  ;-- El boton esta pulsado 
001b			  ;-- Comprobar el valor anterior, que esta en B 
001b b8			  cp B 
001c			 
001c			  ;-- El valor anterior es distinto? 
001c c0			  ret nz ;--> si: Hay click. Retornar 
001d			 
001d			  ;-- No hay click 
001d 18 f2		  jr loop 
001f			 
001f			 org 0x3fff 
3fff			topOfStack: 
# End of file roms/09-wait-click.s
3fff
